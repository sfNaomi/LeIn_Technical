# Unique name for this workflow
name: Scratch Org Validation

# Definition when the workflow should run
on:
    workflow_dispatch:
    pull_request:
        types: [ opened, edited, synchronize ]
        branches:
            - 'develop'
            - 'staging'
            - 'main'

# Jobs to be executed .
jobs:
    scratch-org-validation:
        name: Scratch Org Validation
        runs-on: ubuntu-latest
        env:
            SCRATCH_NAME: ${{ github.event.repository.name }}
        steps:
            -   uses: actions/setup-node@v3
                with:
                    node-version: 16

            # Install Salesforce CLI.
            -   name: 'Install Salesforce CLI'
                run: npm install sfdx-cli --global

            # Install sfdx plugin
            -   name: 'Install plugin'
                shell: bash
                run: |
                    printf 'y\n' | sfdx plugins:install ci-sfdx-plugin@latest
                    printf 'y\n' | sfdx plugins:install sfdmu@latest

            # Obtain JWT certificate for DEVHUB
            -   name: 'Obtain JWT certificate from secrets'
                env:
                    JWT: ${{ secrets.DEV_HUB_CERTIFICATE }}
                shell: bash
                run: echo "$JWT" | base64 --decode > ${HOME}/server.key

            # Authenticate dev hub
            -   name: 'Authenticate Dev Hub'
                env:
                    SFDX_PATH: 'https://login.salesforce.com'
                    SF_USERNAME: 'admin@agbarr.aforza.org'
                shell: bash
                run: sfdx force:auth:jwt:grant --clientid ${{ secrets.DEV_HUB_CLIENT_ID_KEY}} --jwtkeyfile ${HOME}/server.key --instanceurl $SFDX_PATH --username $SF_USERNAME --setdefaultdevhubusername -a DevHub

            # Checkout the source code
            -   name: Checkout source code
                uses: actions/checkout@v3

            # add needed permissions to Administrator PSG for scratch
            -   name: 'Add Permissions for Scratch'
                shell: bash
                run: |
                    permissions="</userPermissions>\n<userPermissions>\n<enabled>true</enabled>\n<name>ManageCssUsers</name>\n</userPermissions>"
                    fileWc=$(wc -l "src/main/default/permissionsets/SystemAdminFeatures.permissionset-meta.xml")
                    lines=$(echo $fileWc|cut -d' ' -f1)
                    sed -i ${lines%% *}"i\ ${permissions}" "src/main/default/permissionsets/SystemAdminFeatures.permissionset-meta.xml"
                    less -FX src/main/default/permissionsets/SystemAdminFeatures.permissionset-meta.xml    

            # Create scratch org and push
            -   name: 'Create scratch org and push'
                run: npm run sfci:init --alias=$SCRATCH_NAME

            # Run Tests in scratch org
            -   name: 'Run Tests in scratch org'
                run: sfdx ci:apex:test:run

            # Delete scratch org
            -   name: 'Delete scratch org'
                if: always()
                run: sfdx force:org:delete -p -u $SCRATCH_NAME