"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var find_1 = __importDefault(require("find"));
var describe_metadata_1 = require("./describe/describe-metadata");
/**
 * Find files of specific metadata type.
 */
function findFilesByMetadataType(type, dir) {
    if (dir === void 0) { dir = "."; }
    var metadataObject = describe_metadata_1.describeMetadata(type);
    if (!metadataObject) {
        throw Error(type + " is not described. Probably not supported.");
    }
    var directoryName = metadataObject.directoryName;
    var suffix = metadataObject.suffix ? "." + metadataObject.suffix + "(-meta.xml)?" : "";
    return find_1.default.fileSync(new RegExp(".*?[/\\\\]" + directoryName + "[/\\\\].*?" + suffix), dir);
}
exports.findFilesByMetadataType = findFilesByMetadataType;
/**
 * Find files of specific object child.
 */
function findCustomObjectChildFiles(childXmlName, dir) {
    if (dir === void 0) { dir = "."; }
    return find_1.default.fileSync(new RegExp(".*?[/\\\\]objects[/\\\\].*?[/\\\\]?." + childXmlName + "-meta.xml"), dir);
}
exports.findCustomObjectChildFiles = findCustomObjectChildFiles;
//# sourceMappingURL=find-metadata.js.map